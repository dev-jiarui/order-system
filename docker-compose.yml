version: "3.8"

services:
  # 订单系统应用
  order-system:
    image: ${IMAGE_NAME:-order-system}:${IMAGE_TAG:-latest}
    container_name: ${CONTAINER_NAME:-order-system}
    ports:
      - "${APP_PORT:-3000}:${PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-dev}
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongo:27017/order_system_dev}
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret-key}
      - PORT=${PORT:-3000}
      # MongoDB连接池配置
      - MONGODB_MAX_POOL_SIZE=${MONGODB_MAX_POOL_SIZE:-10}
      - MONGODB_SERVER_SELECTION_TIMEOUT=${MONGODB_SERVER_SELECTION_TIMEOUT:-5000}
      - MONGODB_SOCKET_TIMEOUT=${MONGODB_SOCKET_TIMEOUT:-45000}
      # 华为云FunctionGraph配置
      - FUNCTIONGRAPH_REGION=${FUNCTIONGRAPH_REGION:-cn-north-4}
      - FUNCTIONGRAPH_ACCESS_KEY=${FUNCTIONGRAPH_ACCESS_KEY:-dev_access_key}
      - FUNCTIONGRAPH_SECRET_KEY=${FUNCTIONGRAPH_SECRET_KEY:-dev_secret_key}
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - order-system-network
    volumes:
      - ${LOG_PATH:-./logs}:/app/logs
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}
    deploy:
      resources:
        limits:
          cpus: ${CPU_LIMIT:-1.0}
          memory: ${MEMORY_LIMIT:-512M}
        reservations:
          cpus: ${CPU_RESERVATION:-0.25}
          memory: ${MEMORY_RESERVATION:-256M}

  # MongoDB数据库
  mongo:
    image: mongo:${MONGO_VERSION:-6.0}
    container_name: ${MONGO_CONTAINER_NAME:-mongo}
    volumes:
      - mongo-data:/data/db
      - ./scripts/init-db.js:/docker-entrypoint-initdb.d/init-db.js:ro
      - ${BACKUP_PATH:-./backups}:/backups
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-order_system_dev}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-}
    restart: unless-stopped
    networks:
      - order-system-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: ${MONGO_CPU_LIMIT:-1.0}
          memory: ${MONGO_MEMORY_LIMIT:-1G}
        reservations:
          cpus: ${MONGO_CPU_RESERVATION:-0.5}
          memory: ${MONGO_MEMORY_RESERVATION:-512M}

  # Nginx反向代理 (仅生产环境)
  nginx:
    image: nginx:${NGINX_VERSION:-alpine}
    container_name: ${NGINX_CONTAINER_NAME:-nginx}
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ${NGINX_CONFIG_PATH:-./nginx/nginx.conf}:/etc/nginx/nginx.conf:ro
      - ${SSL_CERT_PATH:-./nginx/ssl}:/etc/nginx/ssl:ro
    depends_on:
      - order-system
    restart: unless-stopped
    networks:
      - order-system-network
    profiles:
      - production

volumes:
  mongo-data:
    driver: local

networks:
  order-system-network:
    driver: bridge
